// <auto-generated />
#pragma warning disable CS1591
// ReSharper disable RedundantArgumentDefaultValue
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantUsingDirective
using Microsoft.EntityFrameworkCore.Migrations;

namespace DIGOS.Ambassador.Migrations
{
    public partial class MoveCoreEntitiesToSchema : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_Users_Characters_DefaultCharacterID",
                table: "Users");

            migrationBuilder.DropForeignKey(
                name: "FK_Users_Servers_ServerID",
                table: "Users");

            migrationBuilder.DropForeignKey(
                name: "FK_CharacterRoles_Servers_ServerID",
                schema: "CharacterModule",
                table: "CharacterRoles");

            migrationBuilder.DropForeignKey(
                name: "FK_Characters_Users_OwnerID",
                schema: "CharacterModule",
                table: "Characters");

            migrationBuilder.DropForeignKey(
                name: "FK_UserKinks_Users_UserID",
                schema: "KinkModule",
                table: "UserKinks");

            migrationBuilder.DropForeignKey(
                name: "FK_RoleplayParticipants_Users_UserID",
                schema: "RoleplayModule",
                table: "RoleplayParticipants");

            migrationBuilder.DropForeignKey(
                name: "FK_Roleplays_Users_OwnerID",
                schema: "RoleplayModule",
                table: "Roleplays");

            migrationBuilder.DropForeignKey(
                name: "FK_GlobalUserProtections_Users_UserID",
                schema: "TransformationModule",
                table: "GlobalUserProtections");

            migrationBuilder.DropForeignKey(
                name: "FK_ServerUserProtections_Servers_ServerID",
                schema: "TransformationModule",
                table: "ServerUserProtections");

            migrationBuilder.DropForeignKey(
                name: "FK_ServerUserProtections_Users_UserID",
                schema: "TransformationModule",
                table: "ServerUserProtections");

            migrationBuilder.DropForeignKey(
                name: "FK_UserProtectionEntries_Users_UserID",
                schema: "TransformationModule",
                table: "UserProtectionEntries");

            migrationBuilder.DropPrimaryKey(
                name: "PK_Users",
                table: "Users");

            migrationBuilder.DropPrimaryKey(
                name: "PK_UserConsents",
                table: "UserConsents");

            migrationBuilder.DropPrimaryKey(
                name: "PK_Servers",
                table: "Servers");

            migrationBuilder.EnsureSchema(
                name: "Core");

            migrationBuilder.RenameTable(
                name: "Users",
                newName: "UsersIntermediateTableName",
                newSchema: "Core");

            migrationBuilder.RenameTable(
                name: "UserConsents",
                newName: "UserConsentsIntermediateTableName",
                newSchema: "Core");

            migrationBuilder.RenameTable(
                name: "Servers",
                newName: "ServersIntermediateTableName",
                newSchema: "Core");

            migrationBuilder.RenameIndex(
                name: "IX_Users_ServerID",
                schema: "Core",
                table: "UsersIntermediateTableName",
                newName: "IX_UsersIntermediateTableName_ServerID");

            migrationBuilder.RenameIndex(
                name: "IX_Users_DefaultCharacterID",
                schema: "Core",
                table: "UsersIntermediateTableName",
                newName: "IX_UsersIntermediateTableName_DefaultCharacterID");

            migrationBuilder.AddPrimaryKey(
                name: "PK_UsersIntermediateTableName",
                schema: "Core",
                table: "UsersIntermediateTableName",
                column: "ID");

            migrationBuilder.AddPrimaryKey(
                name: "PK_UserConsentsIntermediateTableName",
                schema: "Core",
                table: "UserConsentsIntermediateTableName",
                column: "ID");

            migrationBuilder.AddPrimaryKey(
                name: "PK_ServersIntermediateTableName",
                schema: "Core",
                table: "ServersIntermediateTableName",
                column: "ID");

            migrationBuilder.AddForeignKey(
                name: "FK_CharacterRoles_ServersIntermediateTableName_ServerID",
                schema: "CharacterModule",
                table: "CharacterRoles",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "ServersIntermediateTableName",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_Characters_UsersIntermediateTableName_OwnerID",
                schema: "CharacterModule",
                table: "Characters",
                column: "OwnerID",
                principalSchema: "Core",
                principalTable: "UsersIntermediateTableName",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_UsersIntermediateTableName_Characters_DefaultCharacterID",
                schema: "Core",
                table: "UsersIntermediateTableName",
                column: "DefaultCharacterID",
                principalSchema: "CharacterModule",
                principalTable: "Characters",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_UsersIntermediateTableName_ServersIntermediateTableName_ServerID",
                schema: "Core",
                table: "UsersIntermediateTableName",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "ServersIntermediateTableName",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_UserKinks_UsersIntermediateTableName_UserID",
                schema: "KinkModule",
                table: "UserKinks",
                column: "UserID",
                principalSchema: "Core",
                principalTable: "UsersIntermediateTableName",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_RoleplayParticipants_UsersIntermediateTableName_UserID",
                schema: "RoleplayModule",
                table: "RoleplayParticipants",
                column: "UserID",
                principalSchema: "Core",
                principalTable: "UsersIntermediateTableName",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_Roleplays_UsersIntermediateTableName_OwnerID",
                schema: "RoleplayModule",
                table: "Roleplays",
                column: "OwnerID",
                principalSchema: "Core",
                principalTable: "UsersIntermediateTableName",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_GlobalUserProtections_UsersIntermediateTableName_UserID",
                schema: "TransformationModule",
                table: "GlobalUserProtections",
                column: "UserID",
                principalSchema: "Core",
                principalTable: "UsersIntermediateTableName",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_ServerUserProtections_ServersIntermediateTableName_ServerID",
                schema: "TransformationModule",
                table: "ServerUserProtections",
                column: "ServerID",
                principalSchema: "Core",
                principalTable: "ServersIntermediateTableName",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_ServerUserProtections_UsersIntermediateTableName_UserID",
                schema: "TransformationModule",
                table: "ServerUserProtections",
                column: "UserID",
                principalSchema: "Core",
                principalTable: "UsersIntermediateTableName",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_UserProtectionEntries_UsersIntermediateTableName_UserID",
                schema: "TransformationModule",
                table: "UserProtectionEntries",
                column: "UserID",
                principalSchema: "Core",
                principalTable: "UsersIntermediateTableName",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_CharacterRoles_ServersIntermediateTableName_ServerID",
                schema: "CharacterModule",
                table: "CharacterRoles");

            migrationBuilder.DropForeignKey(
                name: "FK_Characters_UsersIntermediateTableName_OwnerID",
                schema: "CharacterModule",
                table: "Characters");

            migrationBuilder.DropForeignKey(
                name: "FK_UsersIntermediateTableName_Characters_DefaultCharacterID",
                schema: "Core",
                table: "UsersIntermediateTableName");

            migrationBuilder.DropForeignKey(
                name: "FK_UsersIntermediateTableName_ServersIntermediateTableName_ServerID",
                schema: "Core",
                table: "UsersIntermediateTableName");

            migrationBuilder.DropForeignKey(
                name: "FK_UserKinks_UsersIntermediateTableName_UserID",
                schema: "KinkModule",
                table: "UserKinks");

            migrationBuilder.DropForeignKey(
                name: "FK_RoleplayParticipants_UsersIntermediateTableName_UserID",
                schema: "RoleplayModule",
                table: "RoleplayParticipants");

            migrationBuilder.DropForeignKey(
                name: "FK_Roleplays_UsersIntermediateTableName_OwnerID",
                schema: "RoleplayModule",
                table: "Roleplays");

            migrationBuilder.DropForeignKey(
                name: "FK_GlobalUserProtections_UsersIntermediateTableName_UserID",
                schema: "TransformationModule",
                table: "GlobalUserProtections");

            migrationBuilder.DropForeignKey(
                name: "FK_ServerUserProtections_ServersIntermediateTableName_ServerID",
                schema: "TransformationModule",
                table: "ServerUserProtections");

            migrationBuilder.DropForeignKey(
                name: "FK_ServerUserProtections_UsersIntermediateTableName_UserID",
                schema: "TransformationModule",
                table: "ServerUserProtections");

            migrationBuilder.DropForeignKey(
                name: "FK_UserProtectionEntries_UsersIntermediateTableName_UserID",
                schema: "TransformationModule",
                table: "UserProtectionEntries");

            migrationBuilder.DropPrimaryKey(
                name: "PK_UsersIntermediateTableName",
                schema: "Core",
                table: "UsersIntermediateTableName");

            migrationBuilder.DropPrimaryKey(
                name: "PK_UserConsentsIntermediateTableName",
                schema: "Core",
                table: "UserConsentsIntermediateTableName");

            migrationBuilder.DropPrimaryKey(
                name: "PK_ServersIntermediateTableName",
                schema: "Core",
                table: "ServersIntermediateTableName");

            migrationBuilder.RenameTable(
                name: "UsersIntermediateTableName",
                schema: "Core",
                newName: "Users");

            migrationBuilder.RenameTable(
                name: "UserConsentsIntermediateTableName",
                schema: "Core",
                newName: "UserConsents");

            migrationBuilder.RenameTable(
                name: "ServersIntermediateTableName",
                schema: "Core",
                newName: "Servers");

            migrationBuilder.RenameIndex(
                name: "IX_UsersIntermediateTableName_ServerID",
                table: "Users",
                newName: "IX_Users_ServerID");

            migrationBuilder.RenameIndex(
                name: "IX_UsersIntermediateTableName_DefaultCharacterID",
                table: "Users",
                newName: "IX_Users_DefaultCharacterID");

            migrationBuilder.AddPrimaryKey(
                name: "PK_Users",
                table: "Users",
                column: "ID");

            migrationBuilder.AddPrimaryKey(
                name: "PK_UserConsents",
                table: "UserConsents",
                column: "ID");

            migrationBuilder.AddPrimaryKey(
                name: "PK_Servers",
                table: "Servers",
                column: "ID");

            migrationBuilder.AddForeignKey(
                name: "FK_Users_Characters_DefaultCharacterID",
                table: "Users",
                column: "DefaultCharacterID",
                principalSchema: "CharacterModule",
                principalTable: "Characters",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_Users_Servers_ServerID",
                table: "Users",
                column: "ServerID",
                principalTable: "Servers",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_CharacterRoles_Servers_ServerID",
                schema: "CharacterModule",
                table: "CharacterRoles",
                column: "ServerID",
                principalTable: "Servers",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_Characters_Users_OwnerID",
                schema: "CharacterModule",
                table: "Characters",
                column: "OwnerID",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_UserKinks_Users_UserID",
                schema: "KinkModule",
                table: "UserKinks",
                column: "UserID",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_RoleplayParticipants_Users_UserID",
                schema: "RoleplayModule",
                table: "RoleplayParticipants",
                column: "UserID",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_Roleplays_Users_OwnerID",
                schema: "RoleplayModule",
                table: "Roleplays",
                column: "OwnerID",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_GlobalUserProtections_Users_UserID",
                schema: "TransformationModule",
                table: "GlobalUserProtections",
                column: "UserID",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_ServerUserProtections_Servers_ServerID",
                schema: "TransformationModule",
                table: "ServerUserProtections",
                column: "ServerID",
                principalTable: "Servers",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_ServerUserProtections_Users_UserID",
                schema: "TransformationModule",
                table: "ServerUserProtections",
                column: "UserID",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_UserProtectionEntries_Users_UserID",
                schema: "TransformationModule",
                table: "UserProtectionEntries",
                column: "UserID",
                principalTable: "Users",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);
        }
    }
}
