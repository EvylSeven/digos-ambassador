// <auto-generated />
#pragma warning disable CS1591
// ReSharper disable RedundantArgumentDefaultValue
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantUsingDirective
using Microsoft.EntityFrameworkCore.Migrations;

namespace DIGOS.Ambassador.Migrations
{
    public partial class RemoveAppearanceReferencesFromCharacter : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_Characters_Appearances_CurrentAppearanceID",
                schema: "CharacterModule",
                table: "Characters");

            migrationBuilder.DropForeignKey(
                name: "FK_Characters_Appearances_DefaultAppearanceID",
                schema: "CharacterModule",
                table: "Characters");

            migrationBuilder.DropIndex(
                name: "IX_Characters_CurrentAppearanceID",
                schema: "CharacterModule",
                table: "Characters");

            migrationBuilder.DropIndex(
                name: "IX_Characters_DefaultAppearanceID",
                schema: "CharacterModule",
                table: "Characters");

            migrationBuilder.DropColumn(
                name: "CurrentAppearanceID",
                schema: "CharacterModule",
                table: "Characters");

            migrationBuilder.DropColumn(
                name: "DefaultAppearanceID",
                schema: "CharacterModule",
                table: "Characters");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<long>(
                name: "CurrentAppearanceID",
                schema: "CharacterModule",
                table: "Characters",
                nullable: false,
                defaultValue: 0L);

            migrationBuilder.AddColumn<long>(
                name: "DefaultAppearanceID",
                schema: "CharacterModule",
                table: "Characters",
                nullable: true);

            migrationBuilder.CreateIndex(
                name: "IX_Characters_CurrentAppearanceID",
                schema: "CharacterModule",
                table: "Characters",
                column: "CurrentAppearanceID");

            migrationBuilder.CreateIndex(
                name: "IX_Characters_DefaultAppearanceID",
                schema: "CharacterModule",
                table: "Characters",
                column: "DefaultAppearanceID");

            const string restorationQuery = "update \"CharacterModule\".\"Characters\"" +
                                            "set" +
                                            "\"DefaultAppearanceID\" = (select \"DefaultAppearanceID\"" +
                                            "    from \"TransformationModule\".\"AppearanceConfigurations\"" +
                                            "    where \"CharacterID\" = \"Characters\".\"ID\")," +
                                            "\"CurrentAppearanceID\" = (select \"CurrentAppearanceID\"" +
                                            "    from \"TransformationModule\".\"AppearanceConfigurations\"" +
                                            "    where \"CharacterID\" = \"Characters\".\"ID\");";

            migrationBuilder.Sql(restorationQuery);

            migrationBuilder.AddForeignKey(
                name: "FK_Characters_Appearances_CurrentAppearanceID",
                schema: "CharacterModule",
                table: "Characters",
                column: "CurrentAppearanceID",
                principalSchema: "TransformationModule",
                principalTable: "Appearances",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_Characters_Appearances_DefaultAppearanceID",
                schema: "CharacterModule",
                table: "Characters",
                column: "DefaultAppearanceID",
                principalSchema: "TransformationModule",
                principalTable: "Appearances",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);
        }
    }
}
