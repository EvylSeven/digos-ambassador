// <auto-generated />
#pragma warning disable CS1591
// ReSharper disable RedundantArgumentDefaultValue
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantUsingDirective
using Microsoft.EntityFrameworkCore.Migrations;

namespace DIGOS.Ambassador.Migrations
{
    public partial class MoveCharacterRoleEntityToSchema : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_CharacterRoles_Servers_ServerID",
                table: "CharacterRoles");

            migrationBuilder.DropForeignKey(
                name: "FK_Characters_CharacterRoles_RoleID",
                table: "Characters");

            migrationBuilder.DropPrimaryKey(
                name: "PK_CharacterRoles",
                table: "CharacterRoles");

            migrationBuilder.EnsureSchema(
                name: "CharacterModule");

            migrationBuilder.RenameTable(
                name: "CharacterRoles",
                newName: "CharacterRolesIntermediateTableName",
                newSchema: "CharacterModule");

            migrationBuilder.RenameIndex(
                name: "IX_CharacterRoles_ServerID",
                schema: "CharacterModule",
                table: "CharacterRolesIntermediateTableName",
                newName: "IX_CharacterRolesIntermediateTableName_ServerID");

            migrationBuilder.AddPrimaryKey(
                name: "PK_CharacterRolesIntermediateTableName",
                schema: "CharacterModule",
                table: "CharacterRolesIntermediateTableName",
                column: "ID");

            migrationBuilder.AddForeignKey(
                name: "FK_Characters_CharacterRolesIntermediateTableName_RoleID",
                table: "Characters",
                column: "RoleID",
                principalSchema: "CharacterModule",
                principalTable: "CharacterRolesIntermediateTableName",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_CharacterRolesIntermediateTableName_Servers_ServerID",
                schema: "CharacterModule",
                table: "CharacterRolesIntermediateTableName",
                column: "ServerID",
                principalTable: "Servers",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_Characters_CharacterRolesIntermediateTableName_RoleID",
                table: "Characters");

            migrationBuilder.DropForeignKey(
                name: "FK_CharacterRolesIntermediateTableName_Servers_ServerID",
                schema: "CharacterModule",
                table: "CharacterRolesIntermediateTableName");

            migrationBuilder.DropPrimaryKey(
                name: "PK_CharacterRolesIntermediateTableName",
                schema: "CharacterModule",
                table: "CharacterRolesIntermediateTableName");

            migrationBuilder.RenameTable(
                name: "CharacterRolesIntermediateTableName",
                schema: "CharacterModule",
                newName: "CharacterRoles");

            migrationBuilder.RenameIndex(
                name: "IX_CharacterRolesIntermediateTableName_ServerID",
                table: "CharacterRoles",
                newName: "IX_CharacterRoles_ServerID");

            migrationBuilder.AddPrimaryKey(
                name: "PK_CharacterRoles",
                table: "CharacterRoles",
                column: "ID");

            migrationBuilder.AddForeignKey(
                name: "FK_CharacterRoles_Servers_ServerID",
                table: "CharacterRoles",
                column: "ServerID",
                principalTable: "Servers",
                principalColumn: "ID",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "FK_Characters_CharacterRoles_RoleID",
                table: "Characters",
                column: "RoleID",
                principalTable: "CharacterRoles",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);
        }
    }
}
