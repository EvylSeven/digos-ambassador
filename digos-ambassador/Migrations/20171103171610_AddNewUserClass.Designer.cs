// <auto-generated />
using DIGOS.Ambassador.Database;
using DIGOS.Ambassador.Database.UserInfo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using System;

namespace DIGOS.Ambassador.Migrations
{
    [DbContext(typeof(GlobalUserInfoContext))]
    [Migration("20171103171610_AddNewUserClass")]
    partial class AddNewUserClass
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("DIGOS.Ambassador.Database.UserInfo.Character", b =>
                {
                    b.Property<uint>("CharacterID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Avatar");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<string>("Nickname");

                    b.Property<uint?>("OwnerUserID");

                    b.Property<string>("Summary");

                    b.HasKey("CharacterID");

                    b.HasIndex("OwnerUserID");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("DIGOS.Ambassador.Database.UserInfo.Kink", b =>
                {
                    b.Property<uint>("KinkID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Category");

                    b.Property<string>("Description");

                    b.Property<uint>("FListID");

                    b.Property<string>("Name");

                    b.HasKey("KinkID");

                    b.ToTable("Kinks");
                });

            modelBuilder.Entity("DIGOS.Ambassador.Database.UserInfo.User", b =>
                {
                    b.Property<uint>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bio");

                    b.Property<int>("Class");

                    b.Property<ulong>("DiscordID");

                    b.Property<int?>("Timezone");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DIGOS.Ambassador.Database.UserInfo.UserKink", b =>
                {
                    b.Property<uint>("UserKinkID")
                        .ValueGeneratedOnAdd();

                    b.Property<uint?>("KinkID");

                    b.Property<int>("Preference");

                    b.Property<uint?>("UserID");

                    b.HasKey("UserKinkID");

                    b.HasIndex("KinkID");

                    b.HasIndex("UserID");

                    b.ToTable("UserKink");
                });

            modelBuilder.Entity("DIGOS.Ambassador.Database.UserInfo.Character", b =>
                {
                    b.HasOne("DIGOS.Ambassador.Database.UserInfo.User", "Owner")
                        .WithMany("Characters")
                        .HasForeignKey("OwnerUserID");
                });

            modelBuilder.Entity("DIGOS.Ambassador.Database.UserInfo.UserKink", b =>
                {
                    b.HasOne("DIGOS.Ambassador.Database.UserInfo.Kink", "Kink")
                        .WithMany()
                        .HasForeignKey("KinkID");

                    b.HasOne("DIGOS.Ambassador.Database.UserInfo.User")
                        .WithMany("Kinks")
                        .HasForeignKey("UserID");
                });
#pragma warning restore 612, 618
        }
    }
}
