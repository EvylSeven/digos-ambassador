// <auto-generated />
#pragma warning disable CS1591
// ReSharper disable RedundantArgumentDefaultValue
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantUsingDirective
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using System;
using System.Collections.Generic;

namespace DIGOS.Ambassador.Migrations
{
    public partial class AddRoleplayParticipantJoinTable : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "RoleplayParticipant",
                columns: table => new
                {
                    ID = table.Column<long>(nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn),
                    RoleplayID = table.Column<long>(nullable: true),
                    Status = table.Column<int>(nullable: false),
                    UserID = table.Column<long>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RoleplayParticipant", x => x.ID);
                    table.ForeignKey(
                        name: "FK_RoleplayParticipant_Roleplays_RoleplayID",
                        column: x => x.RoleplayID,
                        principalTable: "Roleplays",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_RoleplayParticipant_Users_UserID",
                        column: x => x.UserID,
                        principalTable: "Users",
                        principalColumn: "ID",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateIndex(
                name: "IX_RoleplayParticipant_RoleplayID",
                table: "RoleplayParticipant",
                column: "RoleplayID");

            migrationBuilder.CreateIndex(
                name: "IX_RoleplayParticipant_UserID",
                table: "RoleplayParticipant",
                column: "UserID");

            migrationBuilder.Sql
            (
                @"
                    CREATE OR REPLACE FUNCTION update_participants() RETURNS VOID AS $BODY$

                    DECLARE
                      d RECORD;

                    BEGIN
                        FOR d in SELECT
                            ""ID"",
                            ""RoleplayID"",
                            ""RoleplayID1"",
                            ""RoleplayID2""
                            FROM ""Users""
                        LOOP
                            INSERT INTO ""RoleplayParticipant"" (""RoleplayID"", ""Status"", ""UserID"") VALUES (d.""RoleplayID"", 1, d.""ID"");
                            INSERT INTO ""RoleplayParticipant"" (""RoleplayID"", ""Status"", ""UserID"") VALUES (d.""RoleplayID1"", 3, d.""ID"");
                            INSERT INTO ""RoleplayParticipant"" (""RoleplayID"", ""Status"", ""UserID"") VALUES (d.""RoleplayID2"", 2, d.""ID"");
                        END LOOP;
                    END

                    $BODY$
                    LANGUAGE 'plpgsql';

                    SELECT * FROM update_participants();
                "
            );

            migrationBuilder.DropForeignKey(
                name: "FK_Users_Roleplays_RoleplayID",
                table: "Users");

            migrationBuilder.DropForeignKey(
                name: "FK_Users_Roleplays_RoleplayID1",
                table: "Users");

            migrationBuilder.DropForeignKey(
                name: "FK_Users_Roleplays_RoleplayID2",
                table: "Users");

            migrationBuilder.DropIndex(
                name: "IX_Users_RoleplayID",
                table: "Users");

            migrationBuilder.DropIndex(
                name: "IX_Users_RoleplayID1",
                table: "Users");

            migrationBuilder.DropIndex(
                name: "IX_Users_RoleplayID2",
                table: "Users");

            migrationBuilder.DropColumn(
                name: "RoleplayID",
                table: "Users");

            migrationBuilder.DropColumn(
                name: "RoleplayID1",
                table: "Users");

            migrationBuilder.DropColumn(
                name: "RoleplayID2",
                table: "Users");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "RoleplayParticipant");

            migrationBuilder.AddColumn<long>(
                name: "RoleplayID",
                table: "Users",
                nullable: true);

            migrationBuilder.AddColumn<long>(
                name: "RoleplayID1",
                table: "Users",
                nullable: true);

            migrationBuilder.AddColumn<long>(
                name: "RoleplayID2",
                table: "Users",
                nullable: true);

            migrationBuilder.CreateIndex(
                name: "IX_Users_RoleplayID",
                table: "Users",
                column: "RoleplayID");

            migrationBuilder.CreateIndex(
                name: "IX_Users_RoleplayID1",
                table: "Users",
                column: "RoleplayID1");

            migrationBuilder.CreateIndex(
                name: "IX_Users_RoleplayID2",
                table: "Users",
                column: "RoleplayID2");

            migrationBuilder.AddForeignKey(
                name: "FK_Users_Roleplays_RoleplayID",
                table: "Users",
                column: "RoleplayID",
                principalTable: "Roleplays",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_Users_Roleplays_RoleplayID1",
                table: "Users",
                column: "RoleplayID1",
                principalTable: "Roleplays",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_Users_Roleplays_RoleplayID2",
                table: "Users",
                column: "RoleplayID2",
                principalTable: "Roleplays",
                principalColumn: "ID",
                onDelete: ReferentialAction.Restrict);
        }
    }
}
